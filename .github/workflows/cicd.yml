name: CI/CD Workflow
on:
  push:
    paths:
      - 'src/**'
      - 'dist/*.deb'
jobs:
  build-and-test-src:
    if: "!contains(github.event.head_commit.message, '.deb')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build Docker image for development
        run: docker build -f Dockerfile.dev -t app-dev .
      - name: Build application using make
        run: |
          docker run --rm \
          -v ${{ github.workspace }}:/app -w /app app-dev \
          /bin/bash -c "
            cd /app/src && make debug && make run & sleep 5 &&
            chmod +x /app/test.sh && /app/test.sh && echo \"Done.\""
  release-and-deploy-dist:
    if: "contains(github.event.head_commit.message, '.deb')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build Docker image for production
        run: docker build -f Dockerfile.prod -t app-prod .
      - name: Mount app volume
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app -w /app app-prod \
            /bin/bash -c "
              deb_file=\$(ls app/dist/*.deb | tail -n 1) &&
              apt-get update &&
              dpkg -i \"\$deb_file\" || apt-get install -f -y &&
              /usr/local/bin/cm -h 0.0.0.0 -p 2310 -P 2443 -l /var/logs/cm.log &
              sleep 5 &&
              chmod +x /app/test.sh && /app/test.sh"
        #    || exit 1 &&
        #   echo \"$SSH_KEY\" > ssh_key &&
        #   chmod 600 ssh_key &&
        #   scp -i ssh_key app/dist/*.deb $STAGING_SERVER:/tmp/ &&
        #   ssh -i ssh_key $STAGING_SERVER \"sudo dpkg -i /tmp/*.deb && sudo apt-get install -f -y\"
        # "

